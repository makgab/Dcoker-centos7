##################################################################
# Dockerfile                                                     #
##################################################################
# docker images
# docker ps -a
# docker container list
# docker build -t centos:7 .              # from "Dockerfile" fájlból
# docker create -t -i -p 81:80/tcp -p 23:22/tcp --name centos7-srv --hostname centos7srv centos:7
# docker run -i -p 80:80/tcp -p 443:443/tcp --name containername imagename
# docker start centos7-srv
# docker attach centos7-srv
#
# Backup, Restore:
# docker save [OPTIONS] IMAGE [IMAGE...]
# docker save busybox > busybox.tar
# docker save --output busybox.tar busybox
# docker save -o fedora-latest.tar fedora:latest
# load back:
# docker load < busybox.tar.gz
# docker load --input fedora.tar
#


FROM centos:7

MAINTAINER The CentOS Project <cloud-ops@centos.org>

RUN yum -y install httpd mod_ssl openssh-server
RUN mkdir /var/run/sshd
RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' 


# port:
EXPOSE 80 22

COPY start.sh /start.sh
CMD /start.sh





------------------------------------------------------------------------------------------------------------
#!/bin/bash

# Start the first process
#/usr/sbin/apachectl -DFOREGROUND
/usr/sbin/apachectl
status=$?
if [ $status -ne 0 ]; then
  echo "Failed to start Apache: $status"
  exit $status
fi

# Start the second process
#/usr/sbin/sshd -D
/usr/sbin/sshd
status=$?
if [ $status -ne 0 ]; then
  echo "Failed to start SSHD: $status"
  exit $status
fi

# Naive check runs checks once a minute to see if either of the processes exited.
# This illustrates part of the heavy lifting you need to do if you want to run
# more than one service in a container. The container will exit with an error
# if it detects that either of the processes has exited.
# Otherwise it will loop forever, waking up every 60 seconds

while /bin/true; do
  ps aux |grep sshd |grep -q -v grep
  PROCESS_1_STATUS=$?
  ps aux |grep apache |grep -q -v grep
  PROCESS_2_STATUS=$?
  # If the greps above find anything, they will exit with 0 status
  # If they are not both 0, then something is wrong
  if [ $PROCESS_1_STATUS -ne 0 -o $PROCESS_2_STATUS -ne 0 ]; then
    echo "One of the processes has already exited."
    exit -1
  fi
  sleep 60
done

